name: Run Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  quick-test:
    name: Quick Verification Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Run simple tests
      run: |
        # Create a simple test script
        cat > simple_test.py << 'EOL'
        #!/usr/bin/env python3
        """
        Simple test script for Evo-Learn library functionality.
        This script verifies basic imports and functionality.
        """
        import sys

        print("=== Simple Evo-Learn Verification Test ===")

        # Test imports from enhanced modules
        print("\nTesting enhanced module imports...")
        try:
            import enhanced_core
            print("✓ Successfully imported enhanced_core")
        except ImportError as e:
            print(f"✗ Import Error in enhanced_core: {e}")

        try:
            import enhanced_utils
            print("✓ Successfully imported enhanced_utils")
        except ImportError as e:
            print(f"✗ Import Error in enhanced_utils: {e}")

        try:
            import enhanced_visualization
            print("✓ Successfully imported enhanced_visualization")
        except ImportError as e:
            print(f"✗ Import Error in enhanced_visualization: {e}")

        try:
            import evo_learn_cli
            print("✓ Successfully imported evo_learn_cli")
        except ImportError as e:
            print(f"✗ Import Error in evo_learn_cli: {e}")

        # Testing basic functions from mloptimizer
        print("\nTesting mloptimizer functionality...")
        try:
            from mloptimizer import core, preprocessing, utils
            print("✓ Successfully imported mloptimizer modules")
        except ImportError as e:
            print(f"✗ Import Error in mloptimizer: {e}")

        print("\n--- Test Results Summary ---")
        print("✓ Basic import tests completed")
        print("The repository structure appears to be correct")
        
        # Determine overall success
        if "✗" in sys.stdout.getvalue():
            print("× Some tests failed")
            sys.exit(1)
        else:
            print("✓ All tests passed")
            sys.exit(0)
        EOL
        
        # Run the test
        python simple_test.py